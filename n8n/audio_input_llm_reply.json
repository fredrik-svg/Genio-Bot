{
  "meta": {
    "version": "v1",
    "instanceId": "placeholder-instance"
  },
  "tags": [],
  "nodes": [
    {
      "parameters": {
        "path": "audio-input",
        "options": {
          "responseMode": "lastNode",
          "responseData": "allEntries",
          "responseCode": 200,
          "allowUnauthorizedCerts": true
        }
      },
      "id": "AudioWebhookTrigger",
      "name": "HTTP Webhook (Audio Input)",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.2,
      "position": [
        280,
        300
      ],
      "webhookId": "audio-input",
      "notesInFlow": true,
      "notes": "Tar emot multipart/form-data: { device, audio } från satelliten."
    },
    {
      "parameters": {
        "functionCode": "// OpenAI förväntar sig att ljudfilen heter 'file', inte 'audio'\n// Byt namn på binary property från 'audio' till 'file'\nconst item = items[0];\nif (item.binary && item.binary.audio) {\n  item.binary.file = item.binary.audio;\n  delete item.binary.audio;\n}\nreturn items;"
      },
      "id": "PrepareForOpenAI",
      "name": "Function: Prepare for OpenAI",
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [
        420,
        300
      ],
      "notesInFlow": true,
      "notes": "Byter namn på binary property från 'audio' till 'file' för OpenAI API."
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "requestMethod": "POST",
        "url": "https://api.openai.com/v1/audio/transcriptions",
        "jsonParameters": false,
        "options": {
          "timeout": 30000
        },
        "sendBody": true,
        "specifyBody": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "whisper-1"
            },
            {
              "name": "language",
              "value": "sv"
            }
          ]
        },
        "sendBinaryData": true,
        "binaryPropertyName": "file"
      },
      "id": "HTTPtoSTT",
      "name": "HTTP Request → OpenAI Whisper",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        700,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "openai-api-key",
          "name": "OpenAI API Key"
        }
      },
      "notesInFlow": true,
      "notes": "Skickar ljudfil till OpenAI Whisper API för transkribering. Kräver OpenAI API-nyckel i credentials."
    },
    {
      "parameters": {
        "functionCode": "// Extrahera transkriberad text från OpenAI Whisper-respons\n// OpenAI returnerar: { text: \"...\" }\nconst d = items[0].json || {};\nlet text = d.text || \"\";\nif (!text) {\n  throw new Error(\"Ingen text från OpenAI Whisper\");\n}\n// Hämta device från den ursprungliga webhook-requesten\nconst device = $('HTTP Webhook (Audio Input)').first().json.device || 'unknown';\nreturn [{ json: { text, device } }];"
      },
      "id": "ExtractText",
      "name": "Function: Extract Text from OpenAI",
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [
        980,
        300
      ],
      "notesInFlow": true,
      "notes": "Extrahera text från OpenAI Whisper-respons och bevara device-info."
    },
    {
      "parameters": {
        "authentication": "none",
        "requestMethod": "POST",
        "url": "https://your-llm-server.example.com/api/generate",
        "jsonParameters": true,
        "options": {
          "timeout": 30000
        },
        "sendBody": true,
        "bodyParametersJson": "{\"model\": \"llama-3.1-8b\", \"stream\": false, \"prompt\": \"Svara kort och hjälpsamt på svenska: {{$json[\\\"text\\\"]}}\"}"
      },
      "id": "HTTPtoLLM",
      "name": "HTTP Request → AI Agent (LLM)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1260,
        300
      ],
      "notesInFlow": true,
      "notes": "AI Agent som hanterar frågan efter OpenAI transkribering. Byt URL till din vLLM/OpenAI-proxy."
    },
    {
      "parameters": {
        "functionCode": "// Extrahera textsvar från valfri LLM-respons\nconst d = items[0].json || {};\nlet reply = d.reply || d.text || d.choices?.[0]?.message?.content || d.choices?.[0]?.text || \"Jag är osäker, kan du omformulera?\";\nreturn [{ json: { reply } }];"
      },
      "id": "FormatReply",
      "name": "Function: Format Reply",
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [
        1540,
        300
      ]
    },
    {
      "parameters": {
        "responseBody": "={{$json}}",
        "responseCode": 200
      },
      "id": "ReturnWebhook",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1800,
        300
      ],
      "notesInFlow": true,
      "notes": "Returnerar { reply } till satelliten (Raspberry PI)."
    }
  ],
  "connections": {
    "HTTP Webhook (Audio Input)": {
      "main": [
        [
          {
            "node": "Function: Prepare for OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function: Prepare for OpenAI": {
      "main": [
        [
          {
            "node": "HTTP Request → OpenAI Whisper",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request → OpenAI Whisper": {
      "main": [
        [
          {
            "node": "Function: Extract Text from OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function: Extract Text from OpenAI": {
      "main": [
        [
          {
            "node": "HTTP Request → AI Agent (LLM)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request → AI Agent (LLM)": {
      "main": [
        [
          {
            "node": "Function: Format Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function: Format Reply": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "timezone": "Europe/Stockholm"
  },
  "name": "Genio-Bot Audio Input -> OpenAI Whisper -> AI Agent -> Reply"
}
