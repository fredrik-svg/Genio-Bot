{
  "meta": {
    "version": "v1",
    "instanceId": "placeholder-instance"
  },
  "tags": [],
  "nodes": [
    {
      "parameters": {
        "path": "audio-input",
        "options": {
          "responseMode": "lastNode",
          "responseData": "allEntries",
          "responseCode": 200,
          "allowUnauthorizedCerts": true
        }
      },
      "id": "AudioWebhookTrigger",
      "name": "HTTP Webhook (Audio Input)",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.2,
      "position": [
        280,
        300
      ],
      "webhookId": "audio-input",
      "notesInFlow": true,
      "notes": "Tar emot multipart/form-data: { device, audio } från satelliten."
    },
    {
      "parameters": {
        "authentication": "none",
        "requestMethod": "POST",
        "url": "https://your-stt-server.example.com/api/transcribe",
        "jsonParameters": false,
        "options": {
          "timeout": 30000
        },
        "sendBody": true,
        "sendBinaryData": true,
        "binaryPropertyName": "audio"
      },
      "id": "HTTPtoSTT",
      "name": "HTTP Request → STT",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        560,
        300
      ],
      "notesInFlow": true,
      "notes": "Skicka ljudfil till Whisper/STT-server. Byt URL till din STT-endpoint (t.ex. faster-whisper-server eller OpenAI Whisper API)."
    },
    {
      "parameters": {
        "functionCode": "// Extrahera transkriberad text från STT-respons\nconst d = items[0].json || {};\nlet text = d.text || d.transcription || d.transcript || \"\";\nif (!text) {\n  throw new Error(\"Ingen text från STT\");\n}\nreturn [{ json: { text, device: items[0].json.device } }];"
      },
      "id": "ExtractText",
      "name": "Function: Extract Text",
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [
        840,
        300
      ],
      "notesInFlow": true,
      "notes": "Extrahera text från STT-respons."
    },
    {
      "parameters": {
        "authentication": "none",
        "requestMethod": "POST",
        "url": "https://your-llm-server.example.com/api/generate",
        "jsonParameters": true,
        "options": {
          "timeout": 30000
        },
        "sendBody": true,
        "bodyParametersJson": "{\"model\": \"llama-3.1-8b\", \"stream\": false, \"prompt\": \"Svara kort och hjälpsamt på svenska: {{$json[\\\"text\\\"]}}\"}"
      },
      "id": "HTTPtoLLM",
      "name": "HTTP Request → LLM",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1120,
        300
      ],
      "notesInFlow": true,
      "notes": "Byt URL till din vLLM/OpenAI-proxy. Returnerar JSON med fält t.ex. { reply } eller { text }."
    },
    {
      "parameters": {
        "functionCode": "// Extrahera textsvar från valfri LLM-respons\nconst d = items[0].json || {};\nlet reply = d.reply || d.text || d.choices?.[0]?.message?.content || d.choices?.[0]?.text || \"Jag är osäker, kan du omformulera?\";\nreturn [{ json: { reply } }];"
      },
      "id": "FormatReply",
      "name": "Function: Format Reply",
      "type": "n8n-nodes-base.function",
      "typeVersion": 2,
      "position": [
        1400,
        300
      ]
    },
    {
      "parameters": {
        "responseBody": "={{$json}}",
        "responseCode": 200
      },
      "id": "ReturnWebhook",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1660,
        300
      ],
      "notesInFlow": true,
      "notes": "Returnerar { reply } till satelliten."
    }
  ],
  "connections": {
    "HTTP Webhook (Audio Input)": {
      "main": [
        [
          {
            "node": "HTTP Request → STT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request → STT": {
      "main": [
        [
          {
            "node": "Function: Extract Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function: Extract Text": {
      "main": [
        [
          {
            "node": "HTTP Request → LLM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request → LLM": {
      "main": [
        [
          {
            "node": "Function: Format Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function: Format Reply": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "timezone": "Europe/Stockholm"
  },
  "name": "Genio-Bot Audio Input -> STT -> LLM -> Reply"
}
